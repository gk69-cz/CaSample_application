name: Build and Deploy Node.js App to Azure

on:
  push:
    branches:
      - main

env:
  AZURE_WEBAPP_NAME: testingca  # Replace with your Azure Web App name
  AZURE_WEBAPP_PACKAGE_PATH: "./"  # Path to your application
  IMAGE_REPOSITORY: testca  # Replace with your Docker repository name
  CONTAINER_REGISTRY: testca.azurecr.io  # e.g., myregistry.azurecr.io
  TAG: ${{ github.sha }}  # Using commit SHA as the image tag

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Azure Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build -t ${{ env.CONTAINER_REGISTRY }}/${{ env.IMAGE_REPOSITORY }}:${{ env.TAG }} .
      
      - name: Push Docker Image to ACR
        run: |
          docker push ${{ env.CONTAINER_REGISTRY }}/${{ env.IMAGE_REPOSITORY }}:${{ env.TAG }}

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push  # This ensures that the deploy step runs after the build and push step

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Azure Web App for Docker
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}  # Set your Azure publish profile as a secret in GitHub
          images: ${{ env.CONTAINER_REGISTRY }}/${{ env.IMAGE_REPOSITORY }}:${{ env.TAG }}

